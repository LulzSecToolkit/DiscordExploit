import ctypes, os, subprocess, time

try:
    is_admin = os.getuid() == 0
except AttributeError:
    is_admin = ctypes.windll.shell32.IsUserAnAdmin() != 0
print("Is admin: " + str(is_admin))

def RunCMD(command, wait = False):
    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)
    if wait: process.wait()
    #return process.returncode

#kill the discord process so that we can restart it with remote devtools
print("Killing existing Discord processes")
RunCMD('wmic process where name=\'Discord.exe\' delete', True)

userName = os.environ.get('USERNAME')
print("Username is '" + userName + "'")
print("Discord is probably at " + 'C:\\Users\\' + userName + r'\AppData\Local\Discord')

#find the latest discord version

print("Finding latest discord version")
versions = []
for x in os.listdir('C:\\Users\\' + userName + r'\AppData\Local\Discord'):
    #print(x)
    if x.startswith("app-"):
        versions.append(x[4:])

versions.sort(key = lambda x: int(x.replace(".", "")))
latestVersion = "app-" + versions[len(versions) - 1]

print("Found latest version '" + latestVersion + "'!")

print("Starting with devtools enabled")
#restart the discord process with devtools enabled
RunCMD('C:\\Users\\' + userName + r'\AppData\Local\Discord\\' + latestVersion + r'\Discord.exe --remote-debugging-port=9223')
#exit()
print("Connecting to the devtools socket")
# pip install PyChromeDevTools

import PyChromeDevTools
chrome = PyChromeDevTools.ChromeInterface(port=9223)

#for some reason, doesn't improve chances of getting the auth token
#print("Restarting")
#chrome.Page.reload()

#enable network logging
chrome.Network.enable()
print("Network logging enabled!")

waitTime = 5
print("Waiting for " + str(waitTime) + "sec for Discord to send network requests...")
time.sleep(waitTime)
print("Done waiting!")

#look through all the network requests
matching_event, all_events = chrome.wait_event("Network")
all_events.append(matching_event)


print("Looking for auth token (" + str(len(all_events)) + " events)")
#possibleEvents = list(filter(lambda x: x["method"] == "Network.requestWillBeSent", all_events))
possibleEvents = all_events

#look through events and look for the "Authorization" header
authToken = ""
for pEvent in possibleEvents:
    if pEvent is None:
        continue
    if "request" in pEvent["params"] and "Authorization" in pEvent["params"]["request"]["headers"]:
        authToken = pEvent["params"]["request"]["headers"]["Authorization"]
        print("Found auth token")
        break
if authToken == "":
    print("Couldn't find auth token")
    exit()

#use devtools to dump cookies
CookieStore = chrome.Network.getAllCookies()

#looking for the discord auth cookie
print("Extracting discord auth cookie")

authCookieValueA = ""
authCookieValueB = ""
cCount = 0

#enumerate cookies
for cookie in CookieStore["result"]["cookies"]:
    if cookie["name"] == "__cfduid" and cookie["domain"] == ".discordapp.com":
        authCookieValueA = cookie["value"]
        cCount += 1
        print("Found discord auth cookie (" + str(cCount) + " / 2)")
    if cookie["name"] == "__cfruid" and cookie["domain"] == ".discordapp.com":
        authCookieValueB = cookie["value"]
        cCount += 1
        print("Found discord auth cookie (" + str(cCount) + " / 2)")

print("authToken       : " + authToken)
print("authCookieValueA: " + authCookieValueA)
print("authCookieValueB: " + authCookieValueB)